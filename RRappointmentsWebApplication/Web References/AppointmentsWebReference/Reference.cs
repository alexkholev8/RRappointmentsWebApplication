//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace RRappointmentsWebApplication.AppointmentsWebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AppointmentsSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class Appointments : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetInsuranceListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreatmentGroupListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOldAppointmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailableAppointmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOldAppointmentsWithInstructionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupOperLinkListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilteredAvailableAppointmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAppointmentConfirmationStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupMessageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTimeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Appointments() {
            this.Url = global::RRappointmentsWebApplication.Properties.Settings.Default.RRappointmentsWebApplication_AppointmentsWebReference_Appointments;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetInsuranceListCompletedEventHandler GetInsuranceListCompleted;
        
        /// <remarks/>
        public event GetOperListCompletedEventHandler GetOperListCompleted;
        
        /// <remarks/>
        public event GetTreatmentGroupListCompletedEventHandler GetTreatmentGroupListCompleted;
        
        /// <remarks/>
        public event GetSiteListCompletedEventHandler GetSiteListCompleted;
        
        /// <remarks/>
        public event GetOldAppointmentsCompletedEventHandler GetOldAppointmentsCompleted;
        
        /// <remarks/>
        public event GetAvailableAppointmentsCompletedEventHandler GetAvailableAppointmentsCompleted;
        
        /// <remarks/>
        public event GetOldAppointmentsWithInstructionsCompletedEventHandler GetOldAppointmentsWithInstructionsCompleted;
        
        /// <remarks/>
        public event GetGroupOperLinkListCompletedEventHandler GetGroupOperLinkListCompleted;
        
        /// <remarks/>
        public event GetFilteredAvailableAppointmentsCompletedEventHandler GetFilteredAvailableAppointmentsCompleted;
        
        /// <remarks/>
        public event SetAppointmentConfirmationStatusCompletedEventHandler SetAppointmentConfirmationStatusCompleted;
        
        /// <remarks/>
        public event GetGroupMessageListCompletedEventHandler GetGroupMessageListCompleted;
        
        /// <remarks/>
        public event AddTimeCompletedEventHandler AddTimeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInsuranceList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetInsuranceList() {
            object[] results = this.Invoke("GetInsuranceList", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInsuranceListAsync() {
            this.GetInsuranceListAsync(null);
        }
        
        /// <remarks/>
        public void GetInsuranceListAsync(object userState) {
            if ((this.GetInsuranceListOperationCompleted == null)) {
                this.GetInsuranceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInsuranceListOperationCompleted);
            }
            this.InvokeAsync("GetInsuranceList", new object[0], this.GetInsuranceListOperationCompleted, userState);
        }
        
        private void OnGetInsuranceListOperationCompleted(object arg) {
            if ((this.GetInsuranceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInsuranceListCompleted(this, new GetInsuranceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOperList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetOperList() {
            object[] results = this.Invoke("GetOperList", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOperListAsync() {
            this.GetOperListAsync(null);
        }
        
        /// <remarks/>
        public void GetOperListAsync(object userState) {
            if ((this.GetOperListOperationCompleted == null)) {
                this.GetOperListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperListOperationCompleted);
            }
            this.InvokeAsync("GetOperList", new object[0], this.GetOperListOperationCompleted, userState);
        }
        
        private void OnGetOperListOperationCompleted(object arg) {
            if ((this.GetOperListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperListCompleted(this, new GetOperListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTreatmentGroupList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetTreatmentGroupList() {
            object[] results = this.Invoke("GetTreatmentGroupList", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTreatmentGroupListAsync() {
            this.GetTreatmentGroupListAsync(null);
        }
        
        /// <remarks/>
        public void GetTreatmentGroupListAsync(object userState) {
            if ((this.GetTreatmentGroupListOperationCompleted == null)) {
                this.GetTreatmentGroupListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreatmentGroupListOperationCompleted);
            }
            this.InvokeAsync("GetTreatmentGroupList", new object[0], this.GetTreatmentGroupListOperationCompleted, userState);
        }
        
        private void OnGetTreatmentGroupListOperationCompleted(object arg) {
            if ((this.GetTreatmentGroupListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreatmentGroupListCompleted(this, new GetTreatmentGroupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSiteList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetSiteList(int jsonValue) {
            object[] results = this.Invoke("GetSiteList", new object[] {
                        jsonValue});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteListAsync(int jsonValue) {
            this.GetSiteListAsync(jsonValue, null);
        }
        
        /// <remarks/>
        public void GetSiteListAsync(int jsonValue, object userState) {
            if ((this.GetSiteListOperationCompleted == null)) {
                this.GetSiteListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteListOperationCompleted);
            }
            this.InvokeAsync("GetSiteList", new object[] {
                        jsonValue}, this.GetSiteListOperationCompleted, userState);
        }
        
        private void OnGetSiteListOperationCompleted(object arg) {
            if ((this.GetSiteListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteListCompleted(this, new GetSiteListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOldAppointments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OldAppointment[] GetOldAppointments(string jsonId_Num, string jsonFileNum) {
            object[] results = this.Invoke("GetOldAppointments", new object[] {
                        jsonId_Num,
                        jsonFileNum});
            return ((OldAppointment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOldAppointmentsAsync(string jsonId_Num, string jsonFileNum) {
            this.GetOldAppointmentsAsync(jsonId_Num, jsonFileNum, null);
        }
        
        /// <remarks/>
        public void GetOldAppointmentsAsync(string jsonId_Num, string jsonFileNum, object userState) {
            if ((this.GetOldAppointmentsOperationCompleted == null)) {
                this.GetOldAppointmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOldAppointmentsOperationCompleted);
            }
            this.InvokeAsync("GetOldAppointments", new object[] {
                        jsonId_Num,
                        jsonFileNum}, this.GetOldAppointmentsOperationCompleted, userState);
        }
        
        private void OnGetOldAppointmentsOperationCompleted(object arg) {
            if ((this.GetOldAppointmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOldAppointmentsCompleted(this, new GetOldAppointmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAvailableAppointments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AvailableAppointment[] GetAvailableAppointments(int jsonOperCode, int jsonSiteCode, string jsonFromDate, string jsonToDate, int jsonDay1, int jsonDay2, int jsonDay3, int jsonDay4, int jsonDay5, int jsonDay6, int jsonDay7) {
            object[] results = this.Invoke("GetAvailableAppointments", new object[] {
                        jsonOperCode,
                        jsonSiteCode,
                        jsonFromDate,
                        jsonToDate,
                        jsonDay1,
                        jsonDay2,
                        jsonDay3,
                        jsonDay4,
                        jsonDay5,
                        jsonDay6,
                        jsonDay7});
            return ((AvailableAppointment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailableAppointmentsAsync(int jsonOperCode, int jsonSiteCode, string jsonFromDate, string jsonToDate, int jsonDay1, int jsonDay2, int jsonDay3, int jsonDay4, int jsonDay5, int jsonDay6, int jsonDay7) {
            this.GetAvailableAppointmentsAsync(jsonOperCode, jsonSiteCode, jsonFromDate, jsonToDate, jsonDay1, jsonDay2, jsonDay3, jsonDay4, jsonDay5, jsonDay6, jsonDay7, null);
        }
        
        /// <remarks/>
        public void GetAvailableAppointmentsAsync(int jsonOperCode, int jsonSiteCode, string jsonFromDate, string jsonToDate, int jsonDay1, int jsonDay2, int jsonDay3, int jsonDay4, int jsonDay5, int jsonDay6, int jsonDay7, object userState) {
            if ((this.GetAvailableAppointmentsOperationCompleted == null)) {
                this.GetAvailableAppointmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableAppointmentsOperationCompleted);
            }
            this.InvokeAsync("GetAvailableAppointments", new object[] {
                        jsonOperCode,
                        jsonSiteCode,
                        jsonFromDate,
                        jsonToDate,
                        jsonDay1,
                        jsonDay2,
                        jsonDay3,
                        jsonDay4,
                        jsonDay5,
                        jsonDay6,
                        jsonDay7}, this.GetAvailableAppointmentsOperationCompleted, userState);
        }
        
        private void OnGetAvailableAppointmentsOperationCompleted(object arg) {
            if ((this.GetAvailableAppointmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableAppointmentsCompleted(this, new GetAvailableAppointmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOldAppointmentsWithInstructions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OldAppointment[] GetOldAppointmentsWithInstructions(string jsonId_Num, string jsonFileNum) {
            object[] results = this.Invoke("GetOldAppointmentsWithInstructions", new object[] {
                        jsonId_Num,
                        jsonFileNum});
            return ((OldAppointment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOldAppointmentsWithInstructionsAsync(string jsonId_Num, string jsonFileNum) {
            this.GetOldAppointmentsWithInstructionsAsync(jsonId_Num, jsonFileNum, null);
        }
        
        /// <remarks/>
        public void GetOldAppointmentsWithInstructionsAsync(string jsonId_Num, string jsonFileNum, object userState) {
            if ((this.GetOldAppointmentsWithInstructionsOperationCompleted == null)) {
                this.GetOldAppointmentsWithInstructionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOldAppointmentsWithInstructionsOperationCompleted);
            }
            this.InvokeAsync("GetOldAppointmentsWithInstructions", new object[] {
                        jsonId_Num,
                        jsonFileNum}, this.GetOldAppointmentsWithInstructionsOperationCompleted, userState);
        }
        
        private void OnGetOldAppointmentsWithInstructionsOperationCompleted(object arg) {
            if ((this.GetOldAppointmentsWithInstructionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOldAppointmentsWithInstructionsCompleted(this, new GetOldAppointmentsWithInstructionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGroupOperLinkList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetGroupOperLinkList() {
            object[] results = this.Invoke("GetGroupOperLinkList", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupOperLinkListAsync() {
            this.GetGroupOperLinkListAsync(null);
        }
        
        /// <remarks/>
        public void GetGroupOperLinkListAsync(object userState) {
            if ((this.GetGroupOperLinkListOperationCompleted == null)) {
                this.GetGroupOperLinkListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupOperLinkListOperationCompleted);
            }
            this.InvokeAsync("GetGroupOperLinkList", new object[0], this.GetGroupOperLinkListOperationCompleted, userState);
        }
        
        private void OnGetGroupOperLinkListOperationCompleted(object arg) {
            if ((this.GetGroupOperLinkListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupOperLinkListCompleted(this, new GetGroupOperLinkListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFilteredAvailableAppointments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AvailableAppointment[] GetFilteredAvailableAppointments(int jsonOperCode, int jsonSiteCode, string jsonFromDate, string jsonToDate, int jsonDay1, int jsonDay2, int jsonDay3, int jsonDay4, int jsonDay5, int jsonDay6, int jsonDay7) {
            object[] results = this.Invoke("GetFilteredAvailableAppointments", new object[] {
                        jsonOperCode,
                        jsonSiteCode,
                        jsonFromDate,
                        jsonToDate,
                        jsonDay1,
                        jsonDay2,
                        jsonDay3,
                        jsonDay4,
                        jsonDay5,
                        jsonDay6,
                        jsonDay7});
            return ((AvailableAppointment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFilteredAvailableAppointmentsAsync(int jsonOperCode, int jsonSiteCode, string jsonFromDate, string jsonToDate, int jsonDay1, int jsonDay2, int jsonDay3, int jsonDay4, int jsonDay5, int jsonDay6, int jsonDay7) {
            this.GetFilteredAvailableAppointmentsAsync(jsonOperCode, jsonSiteCode, jsonFromDate, jsonToDate, jsonDay1, jsonDay2, jsonDay3, jsonDay4, jsonDay5, jsonDay6, jsonDay7, null);
        }
        
        /// <remarks/>
        public void GetFilteredAvailableAppointmentsAsync(int jsonOperCode, int jsonSiteCode, string jsonFromDate, string jsonToDate, int jsonDay1, int jsonDay2, int jsonDay3, int jsonDay4, int jsonDay5, int jsonDay6, int jsonDay7, object userState) {
            if ((this.GetFilteredAvailableAppointmentsOperationCompleted == null)) {
                this.GetFilteredAvailableAppointmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilteredAvailableAppointmentsOperationCompleted);
            }
            this.InvokeAsync("GetFilteredAvailableAppointments", new object[] {
                        jsonOperCode,
                        jsonSiteCode,
                        jsonFromDate,
                        jsonToDate,
                        jsonDay1,
                        jsonDay2,
                        jsonDay3,
                        jsonDay4,
                        jsonDay5,
                        jsonDay6,
                        jsonDay7}, this.GetFilteredAvailableAppointmentsOperationCompleted, userState);
        }
        
        private void OnGetFilteredAvailableAppointmentsOperationCompleted(object arg) {
            if ((this.GetFilteredAvailableAppointmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilteredAvailableAppointmentsCompleted(this, new GetFilteredAvailableAppointmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAppointmentConfirmationStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetAppointmentConfirmationStatus(int jsonLineCode, int jsonConfirmationStatus) {
            object[] results = this.Invoke("SetAppointmentConfirmationStatus", new object[] {
                        jsonLineCode,
                        jsonConfirmationStatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetAppointmentConfirmationStatusAsync(int jsonLineCode, int jsonConfirmationStatus) {
            this.SetAppointmentConfirmationStatusAsync(jsonLineCode, jsonConfirmationStatus, null);
        }
        
        /// <remarks/>
        public void SetAppointmentConfirmationStatusAsync(int jsonLineCode, int jsonConfirmationStatus, object userState) {
            if ((this.SetAppointmentConfirmationStatusOperationCompleted == null)) {
                this.SetAppointmentConfirmationStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAppointmentConfirmationStatusOperationCompleted);
            }
            this.InvokeAsync("SetAppointmentConfirmationStatus", new object[] {
                        jsonLineCode,
                        jsonConfirmationStatus}, this.SetAppointmentConfirmationStatusOperationCompleted, userState);
        }
        
        private void OnSetAppointmentConfirmationStatusOperationCompleted(object arg) {
            if ((this.SetAppointmentConfirmationStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAppointmentConfirmationStatusCompleted(this, new SetAppointmentConfirmationStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGroupMessageList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetGroupMessageList() {
            object[] results = this.Invoke("GetGroupMessageList", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupMessageListAsync() {
            this.GetGroupMessageListAsync(null);
        }
        
        /// <remarks/>
        public void GetGroupMessageListAsync(object userState) {
            if ((this.GetGroupMessageListOperationCompleted == null)) {
                this.GetGroupMessageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupMessageListOperationCompleted);
            }
            this.InvokeAsync("GetGroupMessageList", new object[0], this.GetGroupMessageListOperationCompleted, userState);
        }
        
        private void OnGetGroupMessageListOperationCompleted(object arg) {
            if ((this.GetGroupMessageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupMessageListCompleted(this, new GetGroupMessageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddTime(int jsonDiaryNum, string jsonDateTime) {
            object[] results = this.Invoke("AddTime", new object[] {
                        jsonDiaryNum,
                        jsonDateTime});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddTimeAsync(int jsonDiaryNum, string jsonDateTime) {
            this.AddTimeAsync(jsonDiaryNum, jsonDateTime, null);
        }
        
        /// <remarks/>
        public void AddTimeAsync(int jsonDiaryNum, string jsonDateTime, object userState) {
            if ((this.AddTimeOperationCompleted == null)) {
                this.AddTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTimeOperationCompleted);
            }
            this.InvokeAsync("AddTime", new object[] {
                        jsonDiaryNum,
                        jsonDateTime}, this.AddTimeOperationCompleted, userState);
        }
        
        private void OnAddTimeOperationCompleted(object arg) {
            if ((this.AddTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTimeCompleted(this, new AddTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AvailableAppointment {
        
        private string diary_nameField;
        
        private string dtimeField;
        
        private string ddateField;
        
        private string diarynumField;
        
        private string dlineField;
        
        private string ddayField;
        
        /// <remarks/>
        public string Diary_name {
            get {
                return this.diary_nameField;
            }
            set {
                this.diary_nameField = value;
            }
        }
        
        /// <remarks/>
        public string Dtime {
            get {
                return this.dtimeField;
            }
            set {
                this.dtimeField = value;
            }
        }
        
        /// <remarks/>
        public string Ddate {
            get {
                return this.ddateField;
            }
            set {
                this.ddateField = value;
            }
        }
        
        /// <remarks/>
        public string Diarynum {
            get {
                return this.diarynumField;
            }
            set {
                this.diarynumField = value;
            }
        }
        
        /// <remarks/>
        public string Dline {
            get {
                return this.dlineField;
            }
            set {
                this.dlineField = value;
            }
        }
        
        /// <remarks/>
        public string Dday {
            get {
                return this.ddayField;
            }
            set {
                this.ddayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OldAppointment {
        
        private string appointmentTimeField;
        
        private string appointmentDateField;
        
        private string appointmentLocationField;
        
        private string appointmentDayField;
        
        private string appointmentOperNameField;
        
        private string instructionField;
        
        private string lineCodeField;
        
        /// <remarks/>
        public string AppointmentTime {
            get {
                return this.appointmentTimeField;
            }
            set {
                this.appointmentTimeField = value;
            }
        }
        
        /// <remarks/>
        public string AppointmentDate {
            get {
                return this.appointmentDateField;
            }
            set {
                this.appointmentDateField = value;
            }
        }
        
        /// <remarks/>
        public string AppointmentLocation {
            get {
                return this.appointmentLocationField;
            }
            set {
                this.appointmentLocationField = value;
            }
        }
        
        /// <remarks/>
        public string AppointmentDay {
            get {
                return this.appointmentDayField;
            }
            set {
                this.appointmentDayField = value;
            }
        }
        
        /// <remarks/>
        public string AppointmentOperName {
            get {
                return this.appointmentOperNameField;
            }
            set {
                this.appointmentOperNameField = value;
            }
        }
        
        /// <remarks/>
        public string Instruction {
            get {
                return this.instructionField;
            }
            set {
                this.instructionField = value;
            }
        }
        
        /// <remarks/>
        public string LineCode {
            get {
                return this.lineCodeField;
            }
            set {
                this.lineCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ListItem {
        
        private string textField;
        
        private bool selectedField;
        
        private bool enabledField;
        
        private string valueField;
        
        public ListItem() {
            this.textField = "";
            this.selectedField = false;
            this.enabledField = true;
            this.valueField = "";
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool Selected {
            get {
                return this.selectedField;
            }
            set {
                this.selectedField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetInsuranceListCompletedEventHandler(object sender, GetInsuranceListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInsuranceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInsuranceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetOperListCompletedEventHandler(object sender, GetOperListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetTreatmentGroupListCompletedEventHandler(object sender, GetTreatmentGroupListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTreatmentGroupListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTreatmentGroupListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSiteListCompletedEventHandler(object sender, GetSiteListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetOldAppointmentsCompletedEventHandler(object sender, GetOldAppointmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOldAppointmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOldAppointmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OldAppointment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OldAppointment[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAvailableAppointmentsCompletedEventHandler(object sender, GetAvailableAppointmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailableAppointmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailableAppointmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AvailableAppointment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AvailableAppointment[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetOldAppointmentsWithInstructionsCompletedEventHandler(object sender, GetOldAppointmentsWithInstructionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOldAppointmentsWithInstructionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOldAppointmentsWithInstructionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OldAppointment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OldAppointment[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetGroupOperLinkListCompletedEventHandler(object sender, GetGroupOperLinkListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupOperLinkListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupOperLinkListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetFilteredAvailableAppointmentsCompletedEventHandler(object sender, GetFilteredAvailableAppointmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilteredAvailableAppointmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilteredAvailableAppointmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AvailableAppointment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AvailableAppointment[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetAppointmentConfirmationStatusCompletedEventHandler(object sender, SetAppointmentConfirmationStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetAppointmentConfirmationStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetAppointmentConfirmationStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetGroupMessageListCompletedEventHandler(object sender, GetGroupMessageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupMessageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupMessageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddTimeCompletedEventHandler(object sender, AddTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591